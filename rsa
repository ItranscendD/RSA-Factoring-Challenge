#!/usr/bin/python3

import sys
import math


def gcd(a, b):
    while b:
        a, b = b, a % b
    return a


def pollards_rho(n):
    def f(x):
        return (x**2 + 1) % n

    x = 2
    y = 2
    d = 1

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)

    return d


def factorize_rsa_number(n):
    factors = []
    while n > 1:
        factor = pollards_rho(n)
        while n % factor == 0:
            factors.append(factor)
            n //= factor

    return factors


def print_factorization(n, factors):
    print(f"{n}={'*'.join(map(str, factors))}")


def main():
    if len(sys.argv) != 2:
        print("Usage: rsa <file>")
        sys.exit(1)

    input_file = sys.argv[1]

    with open(input_file, 'r') as file:
        for line in file:
            n = int(line.strip())
            factors = factorize_rsa_number(n)
            print_factorization(n, factors)


if __name__ == "__main__":
    main()
